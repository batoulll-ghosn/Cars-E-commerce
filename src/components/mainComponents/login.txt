import { React, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../styles/login.css";
import { useSelector } from "react-redux";
import { useDispatch } from "react-redux";
import { login, register } from "../actions/user";
import axios from "axios";
import ReCAPTCHA from "react-google-recaptcha";
const Login = () => {
const navigate= useNavigate();
  const dispatch = useDispatch();
  const [registerShow, setRegisterShow] = useState(true);
  const [LoginShow, setLoginShow] = useState(false);
  const [fullName, setFullName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPass, setConfirmPass] = useState("");
  const [fullNameError, setFullNameError] = useState("");
  const [phoneNumberError, setPhoneNumberError] = useState("");
  const [emailError, setEmailError] = useState("");
  const [passwordError, setPasswordError] = useState("");
  const [confirmPassError, setConfirmPassError] = useState("");
  const [loginError, setLoginError] = useState("");

  const handleRegister = (e) => {
    e.preventDefault();
    setFullNameError("");
    setPhoneNumberError("");
    setEmailError("");
    setPasswordError("");
    setConfirmPassError("");
    if (fullName.trim().indexOf(" ") === -1) {
      setFullNameError("First name and Last name*");
      return;
    }
    axios
      .get(
        `https://phonevalidation.abstractapi.com/v1/?api_key=6b0b51fa869b4a0aa3c7d908403977c3&phone=${phoneNumber}`
      )
      .then((response) => {
        console.log(response.data.valid);
        if(response.data.valid === false){
          setPhoneNumberError("Phone number doesn't exist")
        }
      })
      .catch((error) => {
        console.log(error);
      });
      if(phoneNumberError){
        return;
      }
    const emailTest = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i;
    if (!emailTest.test(email)) {
      setEmailError("myemail@example.com*");
      return;
    }
    const passwordTest =
      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    if (!passwordTest.test(password)) {
      setPasswordError("at least 1 digit,1 capital letter,1 small letter,1 special and longer than 8*");
      return;
    } 
    if(password !== confirmPass){
      setConfirmPassError("passwords don't match*");
      return;
    }
    dispatch(register(fullName,phoneNumber,email,password,"customer"));
    navigate("/");
  };
 

  const handleLogin = (e) => {
    e.preventDefault();
    dispatch(login(email, password))
      .then(() => {
        navigate("/");
      })
      .catch(() => {
        setLoginError("Invalid email or password*");
      });
  };
  
  return (
    <div className="register">
      {registerShow && (
        <form className="card" onSubmit={(e) => handleRegister(e)}>
          <div>
            <input
              type="text"
              className="register-input"
              placeholder="FULLNAME"
              required
              onChange={(e) => setFullName(e.target.value)}
            />
            {fullNameError && <p className="error">{fullNameError}</p>}
          </div>
          <div>
            <input
              type="tel"
              className="register-input"
              placeholder="PHONE NUMBER"
              required
              onChange={(e) => setPhoneNumber(e.target.value)}
            />
            {phoneNumberError && <p className="error">{phoneNumberError}</p>}
          </div>
          <div>
            <input
              type="email"
              className="register-input"
              placeholder="EMAIL"
              onChange={(e) => setEmail(e.target.value)}
            />
            {emailError && <p className="error">{emailError}</p>}
          </div>
          <div>
            <input
              type="password"
              className="register-input"
              placeholder="PASSWORD"
              required
              onChange={(e) => setPassword(e.target.value)}
            />
            {passwordError && <p className="error">{passwordError}</p>}
          </div>
          <div>
            <input
              type="password"
              className="register-input"
              placeholder="CONFIRM PASSWORD"
              required
              onChange={(e) => setConfirmPass(e.target.value)}
            />
            {confirmPassError && <p className="error">{confirmPassError}</p>}
          </div>
          <div className="register-input">
            <input type="checkbox" style={{ transform: "scale(2)" }} required />
            <span style={{ paddingLeft: "10px" }}>I'm not a robot</span>
          </div>
          <button className="register-button" type="submit">
            Register
          </button>
          <span className="link">
            Already have an account?
            <span
              className="link2"
              onClick={() => {
                setRegisterShow(false);
                setLoginShow(true);
              }}
            >
              Sign in
            </span>
          </span>
        </form>
      )}
      {LoginShow && (
        <form className="card2" onSubmit={(e)=>handleLogin(e)}>
          <div>
          <input
            type="text"
            className="register-input"
            placeholder="EMAIL"
            required
            onChange={(e) => setEmail(e.target.value)}
          />
          </div>
          <div>
          <input
            type="text"
            className="register-input"
            placeholder="PASSWORD"
            required
            onChange={(e) => setPassword(e.target.value)}
          />
          {
            loginError &&
            <p className="error">{loginError}</p>
          }
          </div>
          <button className="register-button" type="submit">Sign in</button>
          <span className="link">
            Don't have an account?
            <span
              className="link2"
              onClick={() => {
                setRegisterShow(true);
                setLoginShow(false);
              }}
            >
              Register
            </span>
          </span>
        </form>
      )}
    </div>
  );
};

export default Login;
